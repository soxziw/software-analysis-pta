Points-to sets of all variables
[]:<D: void <init>()>/%this -> [[]:NewObj{<UnknownMethodName: D invokeOneArgRet(java.lang.String,java.lang.Class[])>[3@L27] new E}, []:NewObj{<UnknownMethodName: void invokeOneArg(java.lang.String,java.lang.Class[])>[3@L20] new E}]
[]:<D: void oneArg(E)>/%stringconst0 -> [[]:MergedObj{<Merged string constants>}]
[]:<D: void oneArg(E)>/%this -> [[]:NewObj{<UnknownMethodName: void invokeOneArg(java.lang.String,java.lang.Class[])>[3@L20] new E}]
[]:<D: void oneArg(E)>/e -> [[]:NewObj{<UnknownMethodName: void invokeOneArg(java.lang.String,java.lang.Class[])>[3@L20] new E}]
[]:<D: void oneArg(E)>/temp$0 -> []
[]:<E: D oneArgRet(D)>/%stringconst0 -> [[]:MergedObj{<Merged string constants>}]
[]:<E: D oneArgRet(D)>/%this -> [[]:NewObj{<UnknownMethodName: D invokeOneArgRet(java.lang.String,java.lang.Class[])>[3@L27] new E}, []:NewObj{<UnknownMethodName: void invokeOneArg(java.lang.String,java.lang.Class[])>[3@L20] new E}]
[]:<E: D oneArgRet(D)>/d -> [[]:NewObj{<UnknownMethodName: D invokeOneArgRet(java.lang.String,java.lang.Class[])>[3@L27] new E}, []:NewObj{<UnknownMethodName: void invokeOneArg(java.lang.String,java.lang.Class[])>[3@L20] new E}]
[]:<E: D oneArgRet(D)>/temp$0 -> []
[]:<E: void <init>()>/%this -> [[]:NewObj{<UnknownMethodName: D invokeOneArgRet(java.lang.String,java.lang.Class[])>[3@L27] new E}, []:NewObj{<UnknownMethodName: void invokeOneArg(java.lang.String,java.lang.Class[])>[3@L20] new E}]
[]:<E: void nonArg()>/%stringconst0 -> [[]:MergedObj{<Merged string constants>}]
[]:<E: void nonArg()>/temp$0 -> []
[]:<E: void oneArg(D)>/%stringconst0 -> [[]:MergedObj{<Merged string constants>}]
[]:<E: void oneArg(D)>/%this -> [[]:NewObj{<UnknownMethodName: void invokeOneArg(java.lang.String,java.lang.Class[])>[3@L20] new E}]
[]:<E: void oneArg(D)>/d -> [[]:NewObj{<UnknownMethodName: void invokeOneArg(java.lang.String,java.lang.Class[])>[3@L20] new E}]
[]:<E: void oneArg(D)>/temp$0 -> []
[]:<E: void oneArg(java.lang.Object)>/%stringconst0 -> [[]:MergedObj{<Merged string constants>}]
[]:<E: void oneArg(java.lang.Object)>/%this -> [[]:NewObj{<UnknownMethodName: void invokeOneArg(java.lang.String,java.lang.Class[])>[3@L20] new E}]
[]:<E: void oneArg(java.lang.Object)>/o -> [[]:NewObj{<UnknownMethodName: void invokeOneArg(java.lang.String,java.lang.Class[])>[3@L20] new E}]
[]:<E: void oneArg(java.lang.Object)>/temp$0 -> []
[]:<UnknownMethodName: D invokeOneArgRet(java.lang.String,java.lang.Class[])>/d -> [[]:NewObj{<UnknownMethodName: D invokeOneArgRet(java.lang.String,java.lang.Class[])>[3@L27] new E}, []:NewObj{<UnknownMethodName: void invokeOneArg(java.lang.String,java.lang.Class[])>[3@L20] new E}]
[]:<UnknownMethodName: D invokeOneArgRet(java.lang.String,java.lang.Class[])>/e -> [[]:NewObj{<UnknownMethodName: D invokeOneArgRet(java.lang.String,java.lang.Class[])>[3@L27] new E}]
[]:<UnknownMethodName: D invokeOneArgRet(java.lang.String,java.lang.Class[])>/name -> [[]:MergedObj{<Merged java.lang.String>}]
[]:<UnknownMethodName: D invokeOneArgRet(java.lang.String,java.lang.Class[])>/oneArg -> [[]:ReflectionMetaObj{alloc=<E: D oneArgRet(D)>,type=java.lang.reflect.Method}, []:UnknownReflectionMetaObj{alloc=MethodInfo[invoke=<UnknownMethodName: D invokeOneArgRet(java.lang.String,java.lang.Class[])>[1@L26] temp$1 = invokevirtual temp$0.getMethod(name, paramTypes), clazz=E, name=null],type=java.lang.reflect.Method in <UnknownMethodName: D invokeOneArgRet(java.lang.String,java.lang.Class[])>}]
[]:<UnknownMethodName: D invokeOneArgRet(java.lang.String,java.lang.Class[])>/paramTypes -> [[]:NewObj{<UnknownMethodName: void main(java.lang.String[])>[41@L10] newarray java.lang.Class[%intconst2]}]
[]:<UnknownMethodName: D invokeOneArgRet(java.lang.String,java.lang.Class[])>/temp$0 -> [[]:ConstantObj{java.lang.Class: E.class}]
[]:<UnknownMethodName: D invokeOneArgRet(java.lang.String,java.lang.Class[])>/temp$1 -> [[]:UnknownReflectionMetaObj{alloc=MethodInfo[invoke=<UnknownMethodName: D invokeOneArgRet(java.lang.String,java.lang.Class[])>[1@L26] temp$1 = invokevirtual temp$0.getMethod(name, paramTypes), clazz=E, name=null],type=java.lang.reflect.Method in <UnknownMethodName: D invokeOneArgRet(java.lang.String,java.lang.Class[])>}]
[]:<UnknownMethodName: D invokeOneArgRet(java.lang.String,java.lang.Class[])>/temp$2 -> [[]:NewObj{<UnknownMethodName: D invokeOneArgRet(java.lang.String,java.lang.Class[])>[3@L27] new E}]
[]:<UnknownMethodName: D invokeOneArgRet(java.lang.String,java.lang.Class[])>/temp$3 -> [[]:NewObj{<UnknownMethodName: D invokeOneArgRet(java.lang.String,java.lang.Class[])>[7@L28] newarray java.lang.Object[%intconst0]}]
[]:<UnknownMethodName: D invokeOneArgRet(java.lang.String,java.lang.Class[])>/temp$4 -> [[]:NewObj{<UnknownMethodName: D invokeOneArgRet(java.lang.String,java.lang.Class[])>[3@L27] new E}, []:NewObj{<UnknownMethodName: void invokeOneArg(java.lang.String,java.lang.Class[])>[3@L20] new E}]
[]:<UnknownMethodName: java.lang.Class class$(java.lang.String)>/name -> [[]:ConstantObj{java.lang.String: "D"}, []:ConstantObj{java.lang.String: "java.lang.Object"}]
[]:<UnknownMethodName: java.lang.Class class$(java.lang.String)>/temp$0 -> [[]:ConstantObj{java.lang.Class: D.class}, []:ConstantObj{java.lang.Class: java.lang.Object.class}]
[]:<UnknownMethodName: java.lang.Class class$(java.lang.String)>/temp$1 -> [[]:MergedObj{<Merged java.lang.NoClassDefFoundError>}]
[]:<UnknownMethodName: java.lang.Class eClass()>/%stringconst0 -> [[]:ConstantObj{java.lang.String: "E"}]
[]:<UnknownMethodName: java.lang.Class eClass()>/temp$0 -> [[]:ConstantObj{java.lang.Class: E.class}]
[]:<UnknownMethodName: java.lang.String unknown(java.lang.String)>/s -> [[]:ConstantObj{java.lang.String: "nonArg"}, []:ConstantObj{java.lang.String: "oneArg"}, []:ConstantObj{java.lang.String: "oneArgRet"}]
[]:<UnknownMethodName: java.lang.String unknown(java.lang.String)>/temp$0 -> [[]:MergedObj{<Merged java.lang.String>}]
[]:<UnknownMethodName: void invokeNonArg(java.lang.String)>/%nullconst -> []
[]:<UnknownMethodName: void invokeNonArg(java.lang.String)>/name -> [[]:MergedObj{<Merged java.lang.String>}]
[]:<UnknownMethodName: void invokeNonArg(java.lang.String)>/nonArg -> [[]:ReflectionMetaObj{alloc=<E: void nonArg()>,type=java.lang.reflect.Method}, []:ReflectionMetaObj{alloc=<java.lang.Object: int hashCode()>,type=java.lang.reflect.Method}, []:ReflectionMetaObj{alloc=<java.lang.Object: java.lang.Class getClass()>,type=java.lang.reflect.Method}, []:ReflectionMetaObj{alloc=<java.lang.Object: java.lang.String toString()>,type=java.lang.reflect.Method}, []:ReflectionMetaObj{alloc=<java.lang.Object: void notify()>,type=java.lang.reflect.Method}, []:ReflectionMetaObj{alloc=<java.lang.Object: void notifyAll()>,type=java.lang.reflect.Method}, []:ReflectionMetaObj{alloc=<java.lang.Object: void wait()>,type=java.lang.reflect.Method}, []:UnknownReflectionMetaObj{alloc=MethodInfo[invoke=<UnknownMethodName: void invokeNonArg(java.lang.String)>[3@L14] temp$2 = invokevirtual temp$0.getMethod(name, temp$1), clazz=E, name=null],type=java.lang.reflect.Method in <UnknownMethodName: void invokeNonArg(java.lang.String)>}]
[]:<UnknownMethodName: void invokeNonArg(java.lang.String)>/temp$0 -> [[]:ConstantObj{java.lang.Class: E.class}]
[]:<UnknownMethodName: void invokeNonArg(java.lang.String)>/temp$1 -> [[]:NewObj{<UnknownMethodName: void invokeNonArg(java.lang.String)>[2@L14] newarray java.lang.Class[%intconst0]}]
[]:<UnknownMethodName: void invokeNonArg(java.lang.String)>/temp$2 -> [[]:UnknownReflectionMetaObj{alloc=MethodInfo[invoke=<UnknownMethodName: void invokeNonArg(java.lang.String)>[3@L14] temp$2 = invokevirtual temp$0.getMethod(name, temp$1), clazz=E, name=null],type=java.lang.reflect.Method in <UnknownMethodName: void invokeNonArg(java.lang.String)>}]
[]:<UnknownMethodName: void invokeNonArg(java.lang.String)>/temp$3 -> [[]:NewObj{<UnknownMethodName: void invokeNonArg(java.lang.String)>[5@L15] newarray java.lang.Object[%intconst0]}]
[]:<UnknownMethodName: void invokeOneArg(java.lang.String,java.lang.Class[])>/e -> [[]:NewObj{<UnknownMethodName: void invokeOneArg(java.lang.String,java.lang.Class[])>[3@L20] new E}]
[]:<UnknownMethodName: void invokeOneArg(java.lang.String,java.lang.Class[])>/name -> [[]:MergedObj{<Merged java.lang.String>}]
[]:<UnknownMethodName: void invokeOneArg(java.lang.String,java.lang.Class[])>/oneArg -> [[]:ReflectionMetaObj{alloc=<D: void oneArg(E)>,type=java.lang.reflect.Method}, []:ReflectionMetaObj{alloc=<E: D oneArgRet(D)>,type=java.lang.reflect.Method}, []:ReflectionMetaObj{alloc=<E: void oneArg(D)>,type=java.lang.reflect.Method}, []:ReflectionMetaObj{alloc=<E: void oneArg(java.lang.Object)>,type=java.lang.reflect.Method}, []:ReflectionMetaObj{alloc=<java.lang.Object: boolean equals(java.lang.Object)>,type=java.lang.reflect.Method}, []:UnknownReflectionMetaObj{alloc=MethodInfo[invoke=<UnknownMethodName: void invokeOneArg(java.lang.String,java.lang.Class[])>[1@L19] temp$1 = invokevirtual temp$0.getMethod(name, paramTypes), clazz=E, name=null],type=java.lang.reflect.Method in <UnknownMethodName: void invokeOneArg(java.lang.String,java.lang.Class[])>}]
[]:<UnknownMethodName: void invokeOneArg(java.lang.String,java.lang.Class[])>/paramTypes -> [[]:NewObj{<UnknownMethodName: void main(java.lang.String[])>[21@L8] newarray java.lang.Class[%intconst2]}, []:NewObj{<UnknownMethodName: void main(java.lang.String[])>[35@L9] newarray java.lang.Class[%intconst2]}, []:NewObj{<UnknownMethodName: void main(java.lang.String[])>[6@L7] newarray java.lang.Class[%intconst2]}]
[]:<UnknownMethodName: void invokeOneArg(java.lang.String,java.lang.Class[])>/temp$0 -> [[]:ConstantObj{java.lang.Class: E.class}]
[]:<UnknownMethodName: void invokeOneArg(java.lang.String,java.lang.Class[])>/temp$1 -> [[]:UnknownReflectionMetaObj{alloc=MethodInfo[invoke=<UnknownMethodName: void invokeOneArg(java.lang.String,java.lang.Class[])>[1@L19] temp$1 = invokevirtual temp$0.getMethod(name, paramTypes), clazz=E, name=null],type=java.lang.reflect.Method in <UnknownMethodName: void invokeOneArg(java.lang.String,java.lang.Class[])>}]
[]:<UnknownMethodName: void invokeOneArg(java.lang.String,java.lang.Class[])>/temp$2 -> [[]:NewObj{<UnknownMethodName: void invokeOneArg(java.lang.String,java.lang.Class[])>[3@L20] new E}]
[]:<UnknownMethodName: void invokeOneArg(java.lang.String,java.lang.Class[])>/temp$3 -> [[]:NewObj{<UnknownMethodName: void invokeOneArg(java.lang.String,java.lang.Class[])>[7@L21] newarray java.lang.Object[%intconst0]}]
[]:<UnknownMethodName: void main(java.lang.String[])>/%stringconst0 -> [[]:ConstantObj{java.lang.String: "nonArg"}]
[]:<UnknownMethodName: void main(java.lang.String[])>/%stringconst1 -> [[]:ConstantObj{java.lang.String: "oneArg"}]
[]:<UnknownMethodName: void main(java.lang.String[])>/%stringconst3 -> [[]:ConstantObj{java.lang.String: "D"}]
[]:<UnknownMethodName: void main(java.lang.String[])>/%stringconst5 -> [[]:ConstantObj{java.lang.String: "java.lang.Object"}]
[]:<UnknownMethodName: void main(java.lang.String[])>/%stringconst6 -> [[]:ConstantObj{java.lang.String: "oneArgRet"}]
[]:<UnknownMethodName: void main(java.lang.String[])>/args -> [[]:EntryPointObj{alloc=MethodParam{<UnknownMethodName: void main(java.lang.String[])>/0},type=java.lang.String[] in <UnknownMethodName: void main(java.lang.String[])>}]
[]:<UnknownMethodName: void main(java.lang.String[])>/temp$0 -> [[]:MergedObj{<Merged java.lang.String>}]
[]:<UnknownMethodName: void main(java.lang.String[])>/temp$1 -> [[]:MergedObj{<Merged java.lang.String>}]
[]:<UnknownMethodName: void main(java.lang.String[])>/temp$10 -> [[]:ConstantObj{java.lang.Class: D.class}, []:ConstantObj{java.lang.Class: java.lang.Object.class}]
[]:<UnknownMethodName: void main(java.lang.String[])>/temp$11 -> [[]:MergedObj{<Merged java.lang.String>}]
[]:<UnknownMethodName: void main(java.lang.String[])>/temp$12 -> [[]:NewObj{<UnknownMethodName: void main(java.lang.String[])>[35@L9] newarray java.lang.Class[%intconst2]}]
[]:<UnknownMethodName: void main(java.lang.String[])>/temp$13 -> [[]:ConstantObj{java.lang.Class: E.class}]
[]:<UnknownMethodName: void main(java.lang.String[])>/temp$14 -> [[]:MergedObj{<Merged java.lang.String>}]
[]:<UnknownMethodName: void main(java.lang.String[])>/temp$15 -> [[]:NewObj{<UnknownMethodName: void main(java.lang.String[])>[41@L10] newarray java.lang.Class[%intconst2]}]
[]:<UnknownMethodName: void main(java.lang.String[])>/temp$16 -> [[]:ConstantObj{java.lang.Class: D.class}, []:ConstantObj{java.lang.Class: java.lang.Object.class}]
[]:<UnknownMethodName: void main(java.lang.String[])>/temp$17 -> [[]:ConstantObj{java.lang.Class: D.class}, []:ConstantObj{java.lang.Class: java.lang.Object.class}]
[]:<UnknownMethodName: void main(java.lang.String[])>/temp$18 -> [[]:ConstantObj{java.lang.Class: D.class}, []:ConstantObj{java.lang.Class: java.lang.Object.class}]
[]:<UnknownMethodName: void main(java.lang.String[])>/temp$2 -> [[]:NewObj{<UnknownMethodName: void main(java.lang.String[])>[6@L7] newarray java.lang.Class[%intconst2]}]
[]:<UnknownMethodName: void main(java.lang.String[])>/temp$3 -> [[]:ConstantObj{java.lang.Class: D.class}, []:ConstantObj{java.lang.Class: java.lang.Object.class}]
[]:<UnknownMethodName: void main(java.lang.String[])>/temp$4 -> [[]:ConstantObj{java.lang.Class: D.class}, []:ConstantObj{java.lang.Class: java.lang.Object.class}]
[]:<UnknownMethodName: void main(java.lang.String[])>/temp$5 -> [[]:ConstantObj{java.lang.Class: D.class}, []:ConstantObj{java.lang.Class: java.lang.Object.class}]
[]:<UnknownMethodName: void main(java.lang.String[])>/temp$6 -> [[]:MergedObj{<Merged java.lang.String>}]
[]:<UnknownMethodName: void main(java.lang.String[])>/temp$7 -> [[]:NewObj{<UnknownMethodName: void main(java.lang.String[])>[21@L8] newarray java.lang.Class[%intconst2]}]
[]:<UnknownMethodName: void main(java.lang.String[])>/temp$8 -> [[]:ConstantObj{java.lang.Class: D.class}, []:ConstantObj{java.lang.Class: java.lang.Object.class}]
[]:<UnknownMethodName: void main(java.lang.String[])>/temp$9 -> [[]:ConstantObj{java.lang.Class: D.class}, []:ConstantObj{java.lang.Class: java.lang.Object.class}]
[]:<java.lang.Object: boolean equals(java.lang.Object)>/%this -> [[]:NewObj{<UnknownMethodName: void invokeOneArg(java.lang.String,java.lang.Class[])>[3@L20] new E}]
[]:<java.lang.Object: boolean equals(java.lang.Object)>/obj -> [[]:NewObj{<UnknownMethodName: void invokeOneArg(java.lang.String,java.lang.Class[])>[3@L20] new E}]

Points-to sets of all static fields
<UnknownMethodName: java.lang.Class class$D> -> [[]:ConstantObj{java.lang.Class: D.class}, []:ConstantObj{java.lang.Class: java.lang.Object.class}]
<UnknownMethodName: java.lang.Class class$java$lang$Object> -> [[]:ConstantObj{java.lang.Class: D.class}, []:ConstantObj{java.lang.Class: java.lang.Object.class}]
<java.lang.System: java.io.PrintStream out> -> []

Points-to sets of all instance fields

Points-to sets of all array indexes
[]:EntryPointObj{alloc=MethodParam{<UnknownMethodName: void main(java.lang.String[])>/0},type=java.lang.String[] in <UnknownMethodName: void main(java.lang.String[])>}[*] -> [[]:EntryPointObj{alloc=MethodParam{<UnknownMethodName: void main(java.lang.String[])>/0}[*],type=java.lang.String in <UnknownMethodName: void main(java.lang.String[])>}]
[]:NewObj{<UnknownMethodName: D invokeOneArgRet(java.lang.String,java.lang.Class[])>[7@L28] newarray java.lang.Object[%intconst0]}[*] -> [[]:NewObj{<UnknownMethodName: D invokeOneArgRet(java.lang.String,java.lang.Class[])>[3@L27] new E}]
[]:NewObj{<UnknownMethodName: void invokeNonArg(java.lang.String)>[5@L15] newarray java.lang.Object[%intconst0]}[*] -> []
[]:NewObj{<UnknownMethodName: void invokeOneArg(java.lang.String,java.lang.Class[])>[7@L21] newarray java.lang.Object[%intconst0]}[*] -> [[]:NewObj{<UnknownMethodName: void invokeOneArg(java.lang.String,java.lang.Class[])>[3@L20] new E}]
[]:NewObj{<UnknownMethodName: void main(java.lang.String[])>[21@L8] newarray java.lang.Class[%intconst2]}[*] -> [[]:ConstantObj{java.lang.Class: D.class}, []:ConstantObj{java.lang.Class: java.lang.Object.class}]
[]:NewObj{<UnknownMethodName: void main(java.lang.String[])>[35@L9] newarray java.lang.Class[%intconst2]}[*] -> [[]:ConstantObj{java.lang.Class: E.class}]
[]:NewObj{<UnknownMethodName: void main(java.lang.String[])>[41@L10] newarray java.lang.Class[%intconst2]}[*] -> [[]:ConstantObj{java.lang.Class: D.class}, []:ConstantObj{java.lang.Class: java.lang.Object.class}]
[]:NewObj{<UnknownMethodName: void main(java.lang.String[])>[6@L7] newarray java.lang.Class[%intconst2]}[*] -> [[]:ConstantObj{java.lang.Class: D.class}, []:ConstantObj{java.lang.Class: java.lang.Object.class}]

